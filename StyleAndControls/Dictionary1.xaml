<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:StyleAndControls.Controls">

    <ImageBrush x:Key="Copy_ButtonStyle" ImageSource="pack://application:,,,/StyleAndControls;component/Images/copy.png" />
    <ImageBrush x:Key="CopyPress_ButtonStyle" ImageSource="pack://application:,,,/StyleAndControls;component/Images/paper_strelka_press.png" />

    <ImageBrush x:Key="Del_ButtonStyle" ImageSource="pack://application:,,,/StyleAndControls;component/Images/del.png"/>
    <ImageBrush x:Key="DelPress_ButtonStyle" ImageSource="pack://application:,,,/StyleAndControls;component/Images/red_x_press.png"/>

    <ImageBrush x:Key="Add_ButtonStyle" ImageSource="pack://application:,,,/StyleAndControls;component/Images/add.png"/>
    <ImageBrush x:Key="AddPress_ButtonStyle" ImageSource="pack://application:,,,/StyleAndControls;component/Images/pop_press.png"/>

    <ImageBrush x:Key="Key_ButtonStyle" ImageSource="pack://application:,,,/StyleAndControls;component/Images/key_on.png"/>
    <ImageBrush x:Key="KeyPress_ButtonStyle" ImageSource="pack://application:,,,/StyleAndControls;component/Images/key_on_press.png"/>
    <ImageBrush x:Key="KeyDisable_ButtonStyle" ImageSource="pack://application:,,,/StyleAndControls;component/Images/key_on_disable.png"/>

    <Image Height="20" Width="20" x:Key="Key_ImageStyle" Source="pack://application:,,,/StyleAndControls;component/Images/key_on.png" Stretch="Uniform" />
    <Image Height="20" Width="20" x:Key="KeyDisable_ImageStyle" Source="pack://application:,,,/StyleAndControls;component/Images/key_on_disable.png" Stretch="Uniform"/>

    <ImageBrush x:Key="KeyOff_ButtonStyle" ImageSource="pack://application:,,,/StyleAndControls;component/Images/key_off.png"/>
    <ImageBrush x:Key="KeyOffPress_ButtonStyle" ImageSource="pack://application:,,,/StyleAndControls;component/Images/key_off_press.png"/>
    <ImageBrush x:Key="KeyOffDisable_ButtonStyle" ImageSource="pack://application:,,,/StyleAndControls;component/Images/key_off_disable.png"/>

    <Image Height="20" Width="20" x:Key="KeyOff_ImageStyle" Source="pack://application:,,,/StyleAndControls;component/Images/key_off.png"  Stretch="Uniform"/>
    <Image Height="20" Width="20" x:Key="KeyOffDisable_ImageStyle" Source="pack://application:,,,/StyleAndControls;component/Images/key_off_disable.png"  Stretch="Uniform"/>

    <ImageBrush x:Key="Help_ButtonStyle" ImageSource="pack://application:,,,/StyleAndControls;component/Images/Help.png"/>
    <ImageBrush x:Key="Updata_ButtonStyle" ImageSource="pack://application:,,,/StyleAndControls;component/Images/reload_dde.png"/>
    <ImageBrush x:Key="UpdataPress_ButtonStyle" ImageSource="pack://application:,,,/StyleAndControls;component/Images/reload_dde_press.png"/>
    <ImageBrush x:Key="UpdataDisable_ButtonStyle" ImageSource="pack://application:,,,/StyleAndControls;component/Images/reload_dde_disable.png"/>

    <ImageBrush x:Key="TopMostBrush_ButtonStyle" ImageSource="pack://application:,,,/StyleAndControls;component/Images/top_on_windows.png"/>
    <ImageBrush x:Key="TopMostBrushPress_ButtonStyle" ImageSource="pack://application:,,,/StyleAndControls;component/Images/top_on_windows_press.png"/>

    <ImageBrush x:Key="TopMostOutBrush_ButtonStyle" ImageSource="pack://application:,,,/StyleAndControls;component/Images/top_on_windows_no.png"/>
    <ImageBrush x:Key="TopMostOutBrushPress_ButtonStyle" ImageSource="pack://application:,,,/StyleAndControls;component/Images/top_on_windows_no_press.png"/>

    <SolidColorBrush x:Key="BackgroundBrush" Color="#FF5D6D7D"></SolidColorBrush>
    <SolidColorBrush x:Key="WhiteForegroundBrush" Color="White"></SolidColorBrush>

    <!--<ImageBrush x:Key="SaveBrush_ButtonStyle" ImageSource="pack://application:,,,/StyleAndControls;component/Images/save.png"/>
    <ImageBrush x:Key="SaveBrushPress_ButtonStyle" ImageSource="pack://application:,,,/StyleAndControls;component/Images/save_press.png"/>-->

    <!--<ImageBrush x:Key="CancelBrush_ButtonStyle" ImageSource="pack://application:,,,/StyleAndControls;component/Images/cancel.png"/>
    <ImageBrush x:Key="CancelBrushPress_ButtonStyle" ImageSource="pack://application:,,,/StyleAndControls;component/Images/cancel_press.png"/>-->

    <ImageBrush x:Key="SettingIcon" ImageSource="pack://application:,,,/StyleAndControls;component/Images/setting.png"/>
    <ImageBrush x:Key="RefreshIcon" ImageSource="pack://application:,,,/StyleAndControls;component/Images/refresh.png"/>
    <ImageBrush x:Key="ChartIcon" ImageSource="pack://application:,,,/StyleAndControls;component/Images/chart.png"/>
    <ImageBrush x:Key="AddFolderIcon" ImageSource="pack://application:,,,/StyleAndControls;component/Images/addFolder.png"/>
    <ImageBrush x:Key="DelFolderIcon" ImageSource="pack://application:,,,/StyleAndControls;component/Images/delFolder.png"/>
    <ImageBrush x:Key="LoadHistoryIcon" ImageSource="pack://application:,,,/StyleAndControls;component/Images/loadHistory.png"/>
    <ImageBrush x:Key="LockIcon" ImageSource="pack://application:,,,/StyleAndControls;component/Images/Lock.png"/>
    <ImageBrush x:Key="UnlockIcon" ImageSource="pack://application:,,,/StyleAndControls;component/Images/Unlock.png"/>

    <ImageBrush x:Key="CreateContainerIcon" ImageSource="pack://application:,,,/StyleAndControls;component/Images/CreateContainer.png"/>
    <ImageBrush x:Key="CreateRobotsIcon" ImageSource="pack://application:,,,/StyleAndControls;component/Images/CreateRobots.png"/>
    <ImageBrush x:Key="FavoriteIcon" ImageSource="pack://application:,,,/StyleAndControls;component/Images/Favorite.png"/>
    <ImageBrush x:Key="LoadContainerIcon" ImageSource="pack://application:,,,/StyleAndControls;component/Images/LoadContainer.png"/>
    <ImageBrush x:Key="ManageRotosIcon" ImageSource="pack://application:,,,/StyleAndControls;component/Images/ManageRotos.png"/>
    <ImageBrush x:Key="PortfelsIcon" ImageSource="pack://application:,,,/StyleAndControls;component/Images/Portfels.png"/>
    <ImageBrush x:Key="SourceDataIcon" ImageSource="pack://application:,,,/StyleAndControls;component/Images/SourceData.png"/>
    <ImageBrush x:Key="StorageDataIcon" ImageSource="pack://application:,,,/StyleAndControls;component/Images/StorageData.png"/>
    <ImageBrush x:Key="StratetgyIcon" ImageSource="pack://application:,,,/StyleAndControls;component/Images/Stratetgy.png"/>
    <ImageBrush x:Key="TestIcon" ImageSource="pack://application:,,,/StyleAndControls;component/Images/Test.png"/>
    <ImageBrush x:Key="TestingIcon" ImageSource="pack://application:,,,/StyleAndControls;component/Images/Testing.png"/>

    <ImageBrush x:Key="SaveIcon" ImageSource="pack://application:,,,/StyleAndControls;component/Images/save.png"/>
    <ImageBrush x:Key="SaveAsIcon" ImageSource="pack://application:,,,/StyleAndControls;component/Images/saveAs.png"/>
    <ImageBrush x:Key="NewDocIcon" ImageSource="pack://application:,,,/StyleAndControls;component/Images/new_doc.png"/>

    <!--Control colors.-->
    <Color x:Key="WindowColor">#FFE8EDF9</Color>
    <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
    <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

    <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
    <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
    <Color x:Key="DisabledForegroundColor">#FF888888</Color>

    <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
    <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

    <Color x:Key="ControlLightColor">White</Color>
    <Color x:Key="ControlMediumColor">#FF7381F9</Color>
    <Color x:Key="ControlDarkColor">#FF211AA9</Color>

    <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
    <Color x:Key="ControlPressedColor">#FF211AA9</Color>


    <Color x:Key="GlyphColor">#FF444444</Color>
    <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

    <!--Border colors-->
    <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
    <Color x:Key="BorderMediumColor">#FF888888</Color>
    <Color x:Key="BorderDarkColor">#FF444444</Color>

    <Color x:Key="PressedBorderLightColor">#FF888888</Color>
    <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

    <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
    <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

    <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

    <!--Control-specific resources.-->
    <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
    <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
    <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

    <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

    <LinearGradientBrush x:Key="MenuPopupBrush"
                     EndPoint="0.5,1"
                     StartPoint="0.5,0">
        <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="0" />
        <GradientStop Color="{DynamicResource ControlMediumColor}"
                Offset="0.5" />
        <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                     StartPoint="0,0"
                     EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#000000FF"
                    Offset="0" />
                <GradientStop Color="#600000FF"
                    Offset="0.4" />
                <GradientStop Color="#600000FF"
                    Offset="0.6" />
                <GradientStop Color="#000000FF"
                    Offset="1" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <ImageBrush x:Key="RaketaStartBrush_ButtonStyle" ImageSource="pack://application:,,,/StyleAndControls;component/Images/raketa1.png"/>
    <ImageBrush x:Key="RaketaStartBrushPress_ButtonStyle" ImageSource="pack://application:,,,/StyleAndControls;component/Images/raketa1_press.png"/>
    <ImageBrush x:Key="RaketaStartBrushDisable_ButtonStyle" ImageSource="pack://application:,,,/StyleAndControls;component/Images/raketa1_disable.png"/>

    <ImageBrush x:Key="RaketaStopBrush_ButtonStyle" ImageSource="pack://application:,,,/StyleAndControls;component/Images/raketa2.png"/>
    <ImageBrush x:Key="RaketaStopBrushPress_ButtonStyle" ImageSource="pack://application:,,,/StyleAndControls;component/Images/raketa2_press.png"/>
    <ImageBrush x:Key="RaketaStopBrushDisable_ButtonStyle" ImageSource="pack://application:,,,/StyleAndControls;component/Images/raketa2_disable.png"/>

    <ImageBrush x:Key="Points3Brush_ButtonStyle" ImageSource="pack://application:,,,/StyleAndControls;component/Images/3points.png"/>
    <ImageBrush x:Key="Points3BrushPress_ButtonStyle" ImageSource="pack://application:,,,/StyleAndControls;component/Images/3points_press.png"/>

    <ImageBrush x:Key="LeftBrush_ButtonStyle" ImageSource="pack://application:,,,/StyleAndControls;component/Images/left.png"/>
    <ImageBrush x:Key="LeftBrushPress_ButtonStyle" ImageSource="pack://application:,,,/StyleAndControls;component/Images/left_press.png"/>

    <ImageBrush x:Key="RightBrush_ButtonStyle" ImageSource="pack://application:,,,/StyleAndControls;component/Images/right.png"/>
    <ImageBrush x:Key="RightBrushPress_ButtonStyle" ImageSource="pack://application:,,,/StyleAndControls;component/Images/right_press.png"/>

    <ImageBrush x:Key="LeftLeftBrush_ButtonStyle" ImageSource="pack://application:,,,/StyleAndControls;component/Images/left_left.png"/>
    <ImageBrush x:Key="LeftLeftBrushPress_ButtonStyle" ImageSource="pack://application:,,,/StyleAndControls;component/Images/left_left_press.png"/>

    <ImageBrush x:Key="RightRightBrush_ButtonStyle" ImageSource="pack://application:,,,/StyleAndControls;component/Images/right_right.png"/>
    <ImageBrush x:Key="RightRightBrushPress_ButtonStyle" ImageSource="pack://application:,,,/StyleAndControls;component/Images/right_right_press.png"/>

    <!--<ImageBrush x:Key="UpdataBrush_ButtonStyle" ImageSource="pack://application:,,,/StyleAndControls;component/Images/updata.png"/>
    <ImageBrush x:Key="UpdataBrushPress_ButtonStyle" ImageSource="pack://application:,,,/StyleAndControls;component/Images/updata_press.png"/>-->

    <ImageBrush x:Key="PlayButtonStyle" ImageSource="pack://application:,,,/StyleAndControls;component/Images/play.png"/>
    <ImageBrush x:Key="StopButtonStyle" ImageSource="pack://application:,,,/StyleAndControls;component/Images/stop.png"/>
    <SolidColorBrush x:Key="DarkGrayBrushKey">#FF2F2F2F</SolidColorBrush>
    <LinearGradientBrush x:Key="Background1" EndPoint="1,0.5" StartPoint="0,0.5">
        <GradientStop Color="#FFE97E0F" Offset="0" />
        <GradientStop Color="#FFFFD300" Offset="1" />
    </LinearGradientBrush>

    <!--Combobox Style: start-->
    <Style x:Key="ComboBoxReadonlyToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border BorderThickness="2"
                                HorizontalAlignment="Right" Width="18" Height="22" 
                                BorderBrush="#FFFBA903" Background="#FF3D4E60" Margin="0,-2,-2,0" CornerRadius="3">
                        <Grid>
                            <Path x:Name="Arrow" Fill="#dcdcdc" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Path.Data>
                                    <Geometry>M 0 0 L 3.5 4 L 7 0 Z</Geometry>
                                </Path.Data>
                            </Path>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Control}">
        <Setter Property="Foreground" Value="Black"/>
    </Style>

    <Style TargetType="{x:Type Window}">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="12" />
    </Style>

    <Style TargetType="PasswordBox">
        <Setter Property="SnapsToDevicePixels"
          Value="True" />
        <Setter Property="OverridesDefaultStyle"
          Value="True" />
        <Setter Property="KeyboardNavigation.TabNavigation"
          Value="None" />
        <Setter Property="FocusVisualStyle"
          Value="{x:Null}" />
        <Setter Property="MinWidth"
          Value="10" />
        <Setter Property="MinHeight"
          Value="10" />
        <Setter Property="AllowDrop"
          Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border Name="Border"
                CornerRadius="2"
                Padding="2"
                BorderThickness="2">
                        <Border.Background>
                            <SolidColorBrush Color="#FFBDC9D7" />
                        </Border.Background>
                        <Border.BorderBrush>
                            <SolidColorBrush Color="#FFFFA52C" />
                        </Border.BorderBrush>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DisabledControlLightColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ReadOnly">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DisabledControlDarkColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ScrollViewer Margin="0"
                        x:Name="PART_ContentHost" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>

        </Setter>
        <Style.Triggers>
            <Trigger Property="Control.IsEnabled" Value="True">
                <Setter Property="Control.Opacity" Value="1"></Setter>
            </Trigger>
            <Trigger Property="Control.IsEnabled" Value="False">
                <Setter Property="Control.Opacity" Value="0.5"></Setter>
            </Trigger>
        </Style.Triggers>

    </Style>


    <Style  TargetType="ComboBox">
        <Setter Property="Height" Value="18" />
        <!--<Setter Property="Foreground" Value="#1a3e55"/>-->
        <Setter Property="Background" Value="Green"/>
        <Setter Property="BorderBrush" Value="Red"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="4,0,0,0"></Setter>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Border Background="#FFBDC9D7" BorderBrush="#FFFFAC3A" OpacityMask="{x:Null}" BorderThickness="2" CornerRadius="3">
                        <Grid  x:Name="MainGrid" 
                            SnapsToDevicePixels="true" Margin="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                            </Grid.ColumnDefinitions>
                            <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" 
                               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                               Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" 
                               Placement="Bottom">
                                <Border x:Name="DropDownBorder"  BorderThickness="2" Background="#FFBDC9D7">
                                    <ScrollViewer x:Name="DropDownScrollViewer">
                                        <Grid RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="100">
                                                <Rectangle x:Name="OpaqueRect" Fill="#FFFF0D0D" Stroke="#FF2AC412"></Rectangle>
                                            </Canvas>
                                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" 
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                            <ToggleButton 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                Background="{TemplateBinding Background}" 
                                Grid.ColumnSpan="2" 
                                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                Style="{StaticResource ComboBoxReadonlyToggleButton}"/>
                            <ContentPresenter 
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
                                Content="{TemplateBinding SelectionBoxItem}" 
                                ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                IsHitTestVisible="false" 
                                Margin="{TemplateBinding Padding}" 
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>


                    </Border>


                </ControlTemplate>

            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Control.IsEnabled" Value="True">
                <Setter Property="Control.Opacity" Value="1"></Setter>
            </Trigger>
            <Trigger Property="Control.IsEnabled" Value="False">
                <Setter Property="Control.Opacity" Value="0.5"></Setter>
            </Trigger>
        </Style.Triggers>

    </Style>
    <!--Combobox Style: end-->

    <!--ButtonStyle  style: start-->
    <Style TargetType="{x:Type Button}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                    <GradientStop Color="#FFFFC507" Offset="0" />
                    <GradientStop Color="#C4FF9C00" Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Control.IsEnabled" Value="True">
                <Setter Property="Control.Opacity" Value="1"></Setter>
            </Trigger>
            <Trigger Property="Control.IsEnabled" Value="False">
                <Setter Property="Control.Opacity" Value="0.5"></Setter>
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style x:Key="SettingButtonStyle" TargetType="{x:Type Button}">
        <!--<Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="_rect" Width="16" Height="16" Fill="{StaticResource SettingBrushButtonStyle}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="_rect" Property="Fill" Value="{StaticResource SettingBrushButtonStyle}"/>

                        </Trigger>
                        <Trigger Property = "IsPressed" Value="True">
                            <Setter TargetName="_rect" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="_rect" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>-->

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="_rect" Width="20" Height="20" Fill="{StaticResource SettingIcon}" />
                        <Border BorderBrush="Gray" BorderThickness="0" CornerRadius="2" Name="border"
                    TextBlock.Foreground="White">
                            <ContentPresenter RecognizesAccessKey="True" Margin="{TemplateBinding Padding}"></ContentPresenter>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="Gray"></Setter>
                            <Setter TargetName="border" Property="BorderThickness" Value="1"></Setter>

                        </Trigger>
                        <Trigger Property = "IsPressed" Value="True">
                            <Setter TargetName="_rect" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="_rect" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="border" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Control.IsEnabled" Value="True">
                <Setter Property="Control.Opacity" Value="1"></Setter>
            </Trigger>
            <Trigger Property="Control.IsEnabled" Value="False">
                <Setter Property="Control.Opacity" Value="0.5"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="DeleteRowButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="_rect" Width="20" Height="20" Fill="{StaticResource Del_ButtonStyle}" />
                        <Border BorderBrush="Gray" BorderThickness="0" CornerRadius="2" Name="border"
                    TextBlock.Foreground="White">
                            <ContentPresenter RecognizesAccessKey="True" Margin="{TemplateBinding Padding}"></ContentPresenter>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="Gray"></Setter>
                            <Setter TargetName="border" Property="BorderThickness" Value="1"></Setter>
                            <Setter TargetName="_rect" Property="Fill" Value="{StaticResource DelPress_ButtonStyle}"/>

                        </Trigger>
                        <Trigger Property = "IsPressed" Value="True">
                            <Setter TargetName="_rect" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="_rect" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="border" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Control.IsEnabled" Value="True">
                <Setter Property="Control.Opacity" Value="1"></Setter>
            </Trigger>
            <Trigger Property="Control.IsEnabled" Value="False">
                <Setter Property="Control.Opacity" Value="0.5"></Setter>
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style x:Key="BtnRefreshStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="_rect" Width="16" Height="16" Fill="{StaticResource RefreshIcon}" />
                        <Border BorderBrush="Gray" BorderThickness="0" CornerRadius="2" Name="border"
                    TextBlock.Foreground="White">
                            <ContentPresenter RecognizesAccessKey="True" Margin="{TemplateBinding Padding}"></ContentPresenter>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="Gray"></Setter>
                            <Setter TargetName="border" Property="BorderThickness" Value="1"></Setter>

                        </Trigger>
                        <Trigger Property = "IsPressed" Value="True">
                            <Setter TargetName="_rect" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="_rect" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="border" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Control.IsEnabled" Value="True">
                <Setter Property="Control.Opacity" Value="1"></Setter>
            </Trigger>
            <Trigger Property="Control.IsEnabled" Value="False">
                <Setter Property="Control.Opacity" Value="0.5"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BtnLock" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="_rect" Width="16" Height="16" Fill="{StaticResource LockIcon}" />
                        <Border BorderBrush="Gray" BorderThickness="0" CornerRadius="2" Name="border" TextBlock.Foreground="White">
                            <ContentPresenter RecognizesAccessKey="True" Margin="{TemplateBinding Padding}"></ContentPresenter>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="Gray"></Setter>
                            <Setter TargetName="border" Property="BorderThickness" Value="1"></Setter>

                        </Trigger>
                        <Trigger Property = "IsPressed" Value="True">
                            <Setter TargetName="_rect" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="_rect" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="border" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Control.IsEnabled" Value="True">
                <Setter Property="Control.Opacity" Value="1"></Setter>
            </Trigger>
            <Trigger Property="Control.IsEnabled" Value="False">
                <Setter Property="Control.Opacity" Value="0.5"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BtnUnlockStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="_rect" Width="16" Height="16" Fill="{StaticResource UnlockIcon}" />
                        <Border BorderBrush="Gray" BorderThickness="0" CornerRadius="2" Name="border" TextBlock.Foreground="White">
                            <ContentPresenter RecognizesAccessKey="True" Margin="{TemplateBinding Padding}"></ContentPresenter>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="Gray"></Setter>
                            <Setter TargetName="border" Property="BorderThickness" Value="1"></Setter>

                        </Trigger>
                        <Trigger Property = "IsPressed" Value="True">
                            <Setter TargetName="_rect" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="_rect" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="border" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Control.IsEnabled" Value="True">
                <Setter Property="Control.Opacity" Value="1"></Setter>
            </Trigger>
            <Trigger Property="Control.IsEnabled" Value="False">
                <Setter Property="Control.Opacity" Value="0.5"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BtnChartStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">


                    <Grid>
                        <Rectangle x:Name="_rect" Width="20" Height="20" Fill="{StaticResource ChartIcon}" />
                        <Border BorderBrush="Gray" BorderThickness="0" CornerRadius="2" Name="border"
                    TextBlock.Foreground="White">
                            <ContentPresenter RecognizesAccessKey="True" Margin="{TemplateBinding Padding}"></ContentPresenter>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="Gray"></Setter>
                            <Setter TargetName="border" Property="BorderThickness" Value="1"></Setter>
                        </Trigger>
                        <Trigger Property = "IsPressed" Value="True">
                            <Setter TargetName="_rect" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="_rect" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="border" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Control.IsEnabled" Value="True">
                <Setter Property="Control.Opacity" Value="1"></Setter>
            </Trigger>
            <Trigger Property="Control.IsEnabled" Value="False">
                <Setter Property="Control.Opacity" Value="0.5"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BtnAddFolder" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="_rect" Width="16" Height="16" Fill="{StaticResource AddFolderIcon}" />
                        <Border BorderBrush="Gray" BorderThickness="0" CornerRadius="2" Name="border" TextBlock.Foreground="White">
                            <ContentPresenter RecognizesAccessKey="True" Margin="{TemplateBinding Padding}"></ContentPresenter>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="Gray"></Setter>
                            <Setter TargetName="border" Property="BorderThickness" Value="1"></Setter>

                        </Trigger>
                        <Trigger Property = "IsPressed" Value="True">
                            <Setter TargetName="_rect" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="_rect" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="border" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Control.IsEnabled" Value="True">
                <Setter Property="Control.Opacity" Value="1"></Setter>
            </Trigger>
            <Trigger Property="Control.IsEnabled" Value="False">
                <Setter Property="Control.Opacity" Value="0.5"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BtnDelFolder" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="_rect" Width="16" Height="16" Fill="{StaticResource DelFolderIcon}" />
                        <Border BorderBrush="Gray" BorderThickness="0" CornerRadius="2" Name="border"
                    TextBlock.Foreground="White">
                            <ContentPresenter RecognizesAccessKey="True" Margin="{TemplateBinding Padding}"></ContentPresenter>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="Gray"></Setter>
                            <Setter TargetName="border" Property="BorderThickness" Value="1"></Setter>

                        </Trigger>
                        <Trigger Property = "IsPressed" Value="True">
                            <Setter TargetName="_rect" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="_rect" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="border" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Control.IsEnabled" Value="True">
                <Setter Property="Control.Opacity" Value="1"></Setter>
            </Trigger>
            <Trigger Property="Control.IsEnabled" Value="False">
                <Setter Property="Control.Opacity" Value="0.5"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BtnCreateContainer" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="_rect" Width="16" Height="16" Fill="{StaticResource CreateContainerIcon}" />
                        <Border BorderBrush="Gray" BorderThickness="0" CornerRadius="2" Name="border"
                    TextBlock.Foreground="White">
                            <ContentPresenter RecognizesAccessKey="True" Margin="{TemplateBinding Padding}"></ContentPresenter>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="Gray"></Setter>
                            <Setter TargetName="border" Property="BorderThickness" Value="1"></Setter>

                        </Trigger>
                        <Trigger Property = "IsPressed" Value="True">
                            <Setter TargetName="_rect" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="_rect" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="border" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Control.IsEnabled" Value="True">
                <Setter Property="Control.Opacity" Value="1"></Setter>
            </Trigger>
            <Trigger Property="Control.IsEnabled" Value="False">
                <Setter Property="Control.Opacity" Value="0.5"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BtnLoadContainer" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="_rect" Width="16" Height="16" Fill="{StaticResource LoadContainerIcon}" />
                        <Border BorderBrush="Gray" BorderThickness="0" CornerRadius="2" Name="border"
                    TextBlock.Foreground="White">
                            <ContentPresenter RecognizesAccessKey="True" Margin="{TemplateBinding Padding}"></ContentPresenter>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="Gray"></Setter>
                            <Setter TargetName="border" Property="BorderThickness" Value="1"></Setter>

                        </Trigger>
                        <Trigger Property = "IsPressed" Value="True">
                            <Setter TargetName="_rect" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="_rect" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="border" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Control.IsEnabled" Value="True">
                <Setter Property="Control.Opacity" Value="1"></Setter>
            </Trigger>
            <Trigger Property="Control.IsEnabled" Value="False">
                <Setter Property="Control.Opacity" Value="0.5"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BtnTesting" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="_rect" Width="16" Height="16" Fill="{StaticResource TestingIcon}" />
                        <Border BorderBrush="Gray" BorderThickness="0" CornerRadius="2" Name="border"
                    TextBlock.Foreground="White">
                            <ContentPresenter RecognizesAccessKey="True" Margin="{TemplateBinding Padding}"></ContentPresenter>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="Gray"></Setter>
                            <Setter TargetName="border" Property="BorderThickness" Value="1"></Setter>

                        </Trigger>
                        <Trigger Property = "IsPressed" Value="True">
                            <Setter TargetName="_rect" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="_rect" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="border" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Control.IsEnabled" Value="True">
                <Setter Property="Control.Opacity" Value="1"></Setter>
            </Trigger>
            <Trigger Property="Control.IsEnabled" Value="False">
                <Setter Property="Control.Opacity" Value="0.5"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BtnCreateRobots" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="_rect" Width="16" Height="16" Fill="{StaticResource CreateRobotsIcon}" />
                        <Border BorderBrush="Gray" BorderThickness="0" CornerRadius="2" Name="border"
                    TextBlock.Foreground="White">
                            <ContentPresenter RecognizesAccessKey="True" Margin="{TemplateBinding Padding}"></ContentPresenter>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="Gray"></Setter>
                            <Setter TargetName="border" Property="BorderThickness" Value="1"></Setter>

                        </Trigger>
                        <Trigger Property = "IsPressed" Value="True">
                            <Setter TargetName="_rect" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="_rect" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="border" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Control.IsEnabled" Value="True">
                <Setter Property="Control.Opacity" Value="1"></Setter>
            </Trigger>
            <Trigger Property="Control.IsEnabled" Value="False">
                <Setter Property="Control.Opacity" Value="0.5"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BtnLoadHistory" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="_rect" Width="16" Height="16" Fill="{StaticResource LoadHistoryIcon}" />
                        <Border BorderBrush="Gray" BorderThickness="0" CornerRadius="2" Name="border"
                    TextBlock.Foreground="White">
                            <ContentPresenter RecognizesAccessKey="True" Margin="{TemplateBinding Padding}"></ContentPresenter>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="Gray"></Setter>
                            <Setter TargetName="border" Property="BorderThickness" Value="1"></Setter>

                        </Trigger>
                        <Trigger Property = "IsPressed" Value="True">
                            <Setter TargetName="_rect" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="_rect" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="border" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Control.IsEnabled" Value="True">
                <Setter Property="Control.Opacity" Value="1"></Setter>
            </Trigger>
            <Trigger Property="Control.IsEnabled" Value="False">
                <Setter Property="Control.Opacity" Value="0.5"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AddRowButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="_rect" Width="20" Height="20" Fill="{StaticResource Add_ButtonStyle}" />
                        <Border BorderBrush="Gray" BorderThickness="0" CornerRadius="2" Name="border"
                    TextBlock.Foreground="White">
                            <ContentPresenter RecognizesAccessKey="True" Margin="{TemplateBinding Padding}"></ContentPresenter>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="Gray"></Setter>
                            <Setter TargetName="border" Property="BorderThickness" Value="1"></Setter>
                            <Setter TargetName="_rect" Property="Fill" Value="{StaticResource AddPress_ButtonStyle}"/>
                        </Trigger>
                        <Trigger Property = "IsPressed" Value="True">
                            <Setter TargetName="_rect" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="_rect" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="border" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Control.IsEnabled" Value="True">
                <Setter Property="Control.Opacity" Value="1"></Setter>
            </Trigger>
            <Trigger Property="Control.IsEnabled" Value="False">
                <Setter Property="Control.Opacity" Value="0.5"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BtnSaveStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="_rect" Width="17" Height="16" Fill="{StaticResource SaveIcon}" />
                        <Border BorderBrush="Gray" BorderThickness="0" CornerRadius="2" Name="border"
                    TextBlock.Foreground="White">
                            <ContentPresenter RecognizesAccessKey="True" Margin="{TemplateBinding Padding}"></ContentPresenter>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="Gray"></Setter>
                            <Setter TargetName="border" Property="BorderThickness" Value="1"></Setter>

                        </Trigger>
                        <Trigger Property = "IsPressed" Value="True">
                            <Setter TargetName="_rect" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="_rect" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="border" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Control.IsEnabled" Value="True">
                <Setter Property="Control.Opacity" Value="1"></Setter>
            </Trigger>
            <Trigger Property="Control.IsEnabled" Value="False">
                <Setter Property="Control.Opacity" Value="0.5"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BtnSaveAsStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="_rect" Width="16" Height="16" Fill="{StaticResource SaveAsIcon}" />
                        <Border BorderBrush="Gray" BorderThickness="0" CornerRadius="2" Name="border"
                    TextBlock.Foreground="White">
                            <ContentPresenter RecognizesAccessKey="True" Margin="{TemplateBinding Padding}"></ContentPresenter>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="Gray"></Setter>
                            <Setter TargetName="border" Property="BorderThickness" Value="1"></Setter>

                        </Trigger>
                        <Trigger Property = "IsPressed" Value="True">
                            <Setter TargetName="_rect" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="_rect" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="border" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Control.IsEnabled" Value="True">
                <Setter Property="Control.Opacity" Value="1"></Setter>
            </Trigger>
            <Trigger Property="Control.IsEnabled" Value="False">
                <Setter Property="Control.Opacity" Value="0.5"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BtnNewDocStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="_rect" Width="16" Height="16" Fill="{StaticResource NewDocIcon}" />
                        <Border BorderBrush="Gray" BorderThickness="0" CornerRadius="2" Name="border"
                    TextBlock.Foreground="White">
                            <ContentPresenter RecognizesAccessKey="True" Margin="{TemplateBinding Padding}"></ContentPresenter>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="Gray"></Setter>
                            <Setter TargetName="border" Property="BorderThickness" Value="1"></Setter>

                        </Trigger>
                        <Trigger Property = "IsPressed" Value="True">
                            <Setter TargetName="_rect" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="_rect" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="border" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Control.IsEnabled" Value="True">
                <Setter Property="Control.Opacity" Value="1"></Setter>
            </Trigger>
            <Trigger Property="Control.IsEnabled" Value="False">
                <Setter Property="Control.Opacity" Value="0.5"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="PlayBtnStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="_rect" Width="20" Height="20" Fill="{StaticResource PlayButtonStyle}" />
                        <Border BorderBrush="Gray" BorderThickness="0" CornerRadius="2" Name="border"
                    TextBlock.Foreground="White">
                            <ContentPresenter RecognizesAccessKey="True" Margin="{TemplateBinding Padding}"></ContentPresenter>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="Gray"></Setter>
                            <Setter TargetName="border" Property="BorderThickness" Value="1"></Setter>
                        </Trigger>
                        <Trigger Property = "IsPressed" Value="True">
                            <Setter TargetName="_rect" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="_rect" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="border" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Control.IsEnabled" Value="True">
                <Setter Property="Control.Opacity" Value="1"></Setter>
            </Trigger>
            <Trigger Property="Control.IsEnabled" Value="False">
                <Setter Property="Control.Opacity" Value="0.5"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="StopBtnStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">


                    <Grid>
                        <Rectangle x:Name="_rect" Width="20" Height="20" Fill="{StaticResource StopButtonStyle}" />
                        <Border BorderBrush="Gray" BorderThickness="0" CornerRadius="2" Name="border"
                    TextBlock.Foreground="White">
                            <ContentPresenter RecognizesAccessKey="True" Margin="{TemplateBinding Padding}"></ContentPresenter>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="Gray"></Setter>
                            <Setter TargetName="border" Property="BorderThickness" Value="1"></Setter>
                        </Trigger>
                        <Trigger Property = "IsPressed" Value="True">
                            <Setter TargetName="_rect" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="_rect" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="border" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Control.IsEnabled" Value="True">
                <Setter Property="Control.Opacity" Value="1"></Setter>
            </Trigger>
            <Trigger Property="Control.IsEnabled" Value="False">
                <Setter Property="Control.Opacity" Value="0.5"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="EditRowButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Grid>
                        <Rectangle x:Name="_rect" Width="20" Height="20" Fill="{StaticResource Copy_ButtonStyle}" />
                        <Border BorderBrush="Gray" BorderThickness="0" CornerRadius="2" Name="border"
                    TextBlock.Foreground="White">
                            <ContentPresenter RecognizesAccessKey="True" Margin="{TemplateBinding Padding}"></ContentPresenter>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="Gray"></Setter>
                            <Setter TargetName="border" Property="BorderThickness" Value="1"></Setter>
                            <Setter TargetName="_rect" Property="Fill" Value="{StaticResource CopyPress_ButtonStyle}"/>

                        </Trigger>
                        <Trigger Property = "IsPressed" Value="True">
                            <Setter TargetName="_rect" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="_rect" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="border" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="KeyCoonnect_ButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="_rect" Width="27" Height="27" Fill="{StaticResource Key_ButtonStyle}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="_rect" Property="Fill" Value="{StaticResource KeyPress_ButtonStyle}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="_rect" Property="Fill" Value="{StaticResource KeyDisable_ButtonStyle}"/>
                        </Trigger>
                        <Trigger Property = "IsPressed" Value="True">
                            <Setter TargetName="_rect" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="_rect" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="KeyDiscoonnect_ButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="_rect" Width="27" Height="27" Fill="{StaticResource KeyOff_ButtonStyle}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="_rect" Property="Fill" Value="{StaticResource KeyOffPress_ButtonStyle}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="_rect" Property="Fill" Value="{StaticResource KeyOffDisable_ButtonStyle}"/>
                        </Trigger>
                        <Trigger Property = "IsPressed" Value="True">
                            <Setter TargetName="_rect" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="_rect" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="HelpButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Grid>
                        <Rectangle x:Name="_rect" Width="22" Height="22" Fill="{StaticResource Help_ButtonStyle}" />
                        <Border BorderBrush="Gray" BorderThickness="0" CornerRadius="2" Name="border"
                    TextBlock.Foreground="White">
                            <ContentPresenter RecognizesAccessKey="True" Margin="{TemplateBinding Padding}"></ContentPresenter>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="Gray"></Setter>
                            <Setter TargetName="border" Property="BorderThickness" Value="1"></Setter>
                            <Setter TargetName="_rect" Property="Fill" Value="{StaticResource Help_ButtonStyle}"/>

                        </Trigger>
                        <Trigger Property = "IsPressed" Value="True">
                            <Setter TargetName="_rect" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="_rect" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="border" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="UpdataTable_ButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Grid>
                        <Rectangle x:Name="_rect" Width="22" Height="22" Fill="{StaticResource Updata_ButtonStyle}" />
                        <Border BorderBrush="Gray" BorderThickness="0" CornerRadius="2" Name="border"
                    TextBlock.Foreground="White">
                            <ContentPresenter RecognizesAccessKey="True" Margin="{TemplateBinding Padding}"></ContentPresenter>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="Gray"></Setter>
                            <Setter TargetName="border" Property="BorderThickness" Value="1"></Setter>
                            <Setter TargetName="_rect" Property="Fill" Value="{StaticResource Updata_ButtonStyle}"/>

                        </Trigger>
                        <Trigger Property = "IsPressed" Value="True">
                            <Setter TargetName="_rect" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="_rect" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="border" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>

                    <!--<Grid>
                        <Rectangle x:Name="_rect" Width="20" Height="20" Fill="{StaticResource Updata_ButtonStyle}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="_rect" Property="Fill" Value="{StaticResource UpdataPress_ButtonStyle}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="_rect" Property="Fill" Value="{StaticResource UpdataDisable_ButtonStyle}"/>
                        </Trigger>
                        <Trigger Property = "IsPressed" Value="True">
                            <Setter TargetName="_rect" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="_rect" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TopMost_ButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle ToolTip="По верх всех окон - снять" x:Name="_rect" Width="27" Height="27" Fill="{StaticResource TopMostBrush_ButtonStyle}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="_rect" Property="Fill" Value="{StaticResource TopMostBrushPress_ButtonStyle}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="_rect" Property="Fill" Value="{StaticResource UpdataDisable_ButtonStyle}"/>
                        </Trigger>
                        <Trigger Property = "IsPressed" Value="True">
                            <Setter TargetName="_rect" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="_rect" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TopMostOut_ButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="_rect" Width="27" Height="27" Fill="{StaticResource TopMostOutBrush_ButtonStyle}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="_rect" Property="Fill" Value="{StaticResource TopMostOutBrushPress_ButtonStyle}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="_rect" Property="Fill" Value="{StaticResource UpdataDisable_ButtonStyle}"/>
                        </Trigger>
                        <Trigger Property = "IsPressed" Value="True">
                            <Setter TargetName="_rect" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="_rect" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style x:Key="Save_ButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="_rect" Fill="{StaticResource SaveBrush_ButtonStyle}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="_rect" Property="Fill" Value="{StaticResource SaveBrushPress_ButtonStyle}"/>
                        </Trigger>
                        <Trigger Property = "IsPressed" Value="True">
                            <Setter TargetName="_rect" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="_rect" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!--<Style x:Key="Cancel_ButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="_rect" Fill="{StaticResource CancelBrush_ButtonStyle}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="_rect" Property="Fill" Value="{StaticResource CancelBrushPress_ButtonStyle}"/>
                        </Trigger>
                        <Trigger Property = "IsPressed" Value="True">
                            <Setter TargetName="_rect" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="_rect" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <Style x:Key="Roket_ButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle ToolTipService.ShowOnDisabled="True" 
                                    Width="20" Height="20"
                                   x:Name="_rect" Fill="{StaticResource RaketaStartBrush_ButtonStyle}" />
                        <Border BorderBrush="Gray" BorderThickness="0" CornerRadius="2" Name="border"
                    TextBlock.Foreground="White">
                            <ContentPresenter RecognizesAccessKey="True" Margin="{TemplateBinding Padding}"></ContentPresenter>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="_rect" Property="Fill" Value="{StaticResource RaketaStartBrushPress_ButtonStyle}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="Gray"></Setter>
                            <Setter TargetName="border" Property="BorderThickness" Value="1"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="_rect" Property="ToolTip" Value="Нет ни одного активного подключения"></Setter>
                            <Setter TargetName="_rect" Property="Fill" Value="{StaticResource RaketaStartBrushDisable_ButtonStyle}"/>
                        </Trigger>
                        <Trigger Property = "IsPressed" Value="True">
                            <Setter TargetName="_rect" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="_rect" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>

                            <Setter TargetName="border" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="border" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RoketStop_ButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle ToolTipService.ShowOnDisabled="True"
                                    Width="20" Height="20"
                                   x:Name="_rect" Fill="{StaticResource RaketaStopBrush_ButtonStyle}" />
                        <Border BorderBrush="Gray" BorderThickness="0" CornerRadius="2" Name="border"
                    TextBlock.Foreground="White">
                            <ContentPresenter RecognizesAccessKey="True" Margin="{TemplateBinding Padding}"></ContentPresenter>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="_rect" Property="Fill" Value="{StaticResource RaketaStopBrushPress_ButtonStyle}"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="Gray"></Setter>
                            <Setter TargetName="border" Property="BorderThickness" Value="1"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="_rect" Property="ToolTip" Value="Нет ни одного активного подключения"></Setter>
                            <Setter TargetName="_rect" Property="Fill" Value="{StaticResource RaketaStopBrushDisable_ButtonStyle}"/>
                        </Trigger>
                        <Trigger Property = "IsPressed" Value="True">
                            <Setter TargetName="_rect" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="_rect" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>

                            <Setter TargetName="border" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="border" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Points3_ButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="_rect" Fill="{StaticResource Points3Brush_ButtonStyle}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="_rect" Property="Fill" Value="{StaticResource Points3BrushPress_ButtonStyle}"/>
                        </Trigger>
                        <Trigger Property = "IsPressed" Value="True">
                            <Setter TargetName="_rect" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="_rect" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Left_ButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="_rect" Fill="{StaticResource LeftBrush_ButtonStyle}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="_rect" Property="Fill" Value="{StaticResource LeftBrushPress_ButtonStyle}"/>
                        </Trigger>
                        <Trigger Property = "IsPressed" Value="True">
                            <Setter TargetName="_rect" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="_rect" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Right_ButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="_rect" Fill="{StaticResource RightBrush_ButtonStyle}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="_rect" Property="Fill" Value="{StaticResource RightBrushPress_ButtonStyle}"/>
                        </Trigger>
                        <Trigger Property = "IsPressed" Value="True">
                            <Setter TargetName="_rect" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="_rect" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LeftLeft_ButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="_rect" Fill="{StaticResource LeftLeftBrush_ButtonStyle}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="_rect" Property="Fill" Value="{StaticResource LeftLeftBrushPress_ButtonStyle}"/>
                        </Trigger>
                        <Trigger Property = "IsPressed" Value="True">
                            <Setter TargetName="_rect" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="_rect" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RightRight_ButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="_rect" Fill="{StaticResource RightRightBrush_ButtonStyle}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="_rect" Property="Fill" Value="{StaticResource RightRightBrushPress_ButtonStyle}"/>
                        </Trigger>
                        <Trigger Property = "IsPressed" Value="True">
                            <Setter TargetName="_rect" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="_rect" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style x:Key="updata_ButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="_rect" Fill="{StaticResource UpdataBrush_ButtonStyle}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="_rect" Property="Fill" Value="{StaticResource UpdataBrushPress_ButtonStyle}"/>
                        </Trigger>
                        <Trigger Property = "IsPressed" Value="True">
                            <Setter TargetName="_rect" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="_rect" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!--ButtonStyle style: end-->

    <!--CheckBox style: start-->

    <Style x:Key="IsRunCheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <StackPanel Orientation="Horizontal">
                        <Ellipse x:Name="_image" Width="15" Height="15">
                            <Ellipse.Fill>
                                <ImageBrush ImageSource="pack://application:,,,/StyleAndControls;component/Images/light_red.png" />
                            </Ellipse.Fill>
                        </Ellipse>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="_image" Property="Fill">
                                <Setter.Value>
                                    <ImageBrush ImageSource="pack://application:,,,/StyleAndControls;component/Images/light_green.png"></ImageBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="IsRunCheckWithContentBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="Content" Value="Не использовать"></Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <StackPanel Orientation="Horizontal">
                        <Ellipse x:Name="_image" Width="15" Height="15">
                            <Ellipse.Fill>
                                <ImageBrush ImageSource="pack://application:,,,/StyleAndControls;component/Images/light_red.png" />
                            </Ellipse.Fill>
                        </Ellipse>
                        <ContentPresenter x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center"/>

                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="_image" Property="Fill">
                                <Setter.Value>
                                    <ImageBrush ImageSource="pack://application:,,,/StyleAndControls;component/Images/light_green.png"></ImageBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Content" Value="Использовать"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
        <!--<Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                        <Ellipse x:Name="outerEllipse">
                            <Ellipse.Fill>
                                <RadialGradientBrush>
                                    <GradientStop Offset="0" Color="Red"/>
                                    <GradientStop Offset="0.88" Color="LightCoral"/>
                                    <GradientStop Offset="1" Color="DarkRed"/>
                                </RadialGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                        <Ellipse Margin="10" x:Name="highlightCircle" >
                            <Ellipse.Fill >
                                <LinearGradientBrush >
                                    <GradientStop Offset="0" Color="Green"/>
                                    <GradientStop Offset="0.5" Color="LightGreen"/>
                                    <GradientStop Offset="1" Color="DarkGreen"/>
                                </LinearGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                        <ContentPresenter x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="highlightCircle" Property="Fill">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0.3,0" EndPoint="0.7,1">
                                        <GradientStop Offset="0" Color="Green"/>
                                        <GradientStop Offset="0.5" Color="LightGreen"/>
                                        <GradientStop Offset="1" Color="DarkGreen"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="outerEllipse" Property="Fill">
                                <Setter.Value>
                                    <RadialGradientBrush>
                                        <GradientStop Offset="0" Color="Green"/>
                                        <GradientStop Offset="0.88" Color="LightGreen"/>
                                        <GradientStop Offset="1" Color="DarkGreen"/>
                                    </RadialGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="highlightCircle" Property="Fill">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0.3,0" EndPoint="0.7,1">
                                        <GradientStop Offset="0" Color="Red"/>
                                        <GradientStop Offset="0.5" Color="LightCoral"/>
                                        <GradientStop Offset="1" Color="DarkRed"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>-->
    </Style>

    <!--x:Key="CheckedCheckBoxStyle"-->
    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <StackPanel Orientation="Horizontal">
                        <Rectangle x:Name="_image" Width="16" Height="17">
                            <Rectangle.Fill>
                                <ImageBrush ImageSource="pack://application:,,,/StyleAndControls;component/Images/chekbox_off.png" Stretch="Fill" TileMode="None" />
                            </Rectangle.Fill>
                        </Rectangle>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="_image" Property="Width" Value="16"/>
                            <Setter TargetName="_image" Property="Height" Value="17"/>
                            <Setter TargetName="_image" Property="Fill">
                                <Setter.Value>
                                    <ImageBrush ImageSource="pack://application:,,,/StyleAndControls;component/Images/chekbox_on.png" Stretch="Fill" TileMode="None"></ImageBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Control.IsEnabled" Value="True">
                <Setter Property="Control.Opacity" Value="1"></Setter>
            </Trigger>
            <Trigger Property="Control.IsEnabled" Value="False">
                <Setter Property="Control.Opacity" Value="0.5"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--CheckBox style: end-->

    <!--ContextMenyStyle style: start-->

    <!--ContextMenyStyle style: end-->

    <!--DataGridStyle style: start-->

    <Style TargetType="{x:Type DataGridColumnHeader}" x:Key="Comon_ColumnHeaderStyle">
        <Setter Property="Background" Value="#FF11151E"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="5,0,5,0"></Setter>
    </Style>

    <Style x:Key="Comon_RowStyle" TargetType="DataGridRow">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Margin" Value="-1,0,0,0" />

        <Setter Property="Background" Value="GhostWhite"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="MinHeight" Value="25"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
        <Setter Property="ContextMenu" Value="{x:Null}"/>
        <Style.Triggers>
            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                <Setter Property="BorderBrush" Value="#FF2F3847"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Background" Value="#FF566675"/>
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                <Setter Property="BorderBrush" Value="#FF566675"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Background" Value="#FF2F3847"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FF2F3847"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#FF2F3847" />
            </Trigger>

            <!--<Trigger Property="Validation.HasError" Value="True" >
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect Color="Red" ShadowDepth="0" BlurRadius="20" />
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderThickness" Value="2" />
                <Setter Property="BorderBrush" Value="Red" />
                <Setter Property="Foreground" Value="Blue" />
                <Setter Property="FontSize" Value="12" />
            </Trigger>-->
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Opacity" Value="1"></Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Comon_RowHeaderStyle" TargetType="DataGridRowHeader">
        <Setter Property="OverridesDefaultStyle" Value="True"></Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"></Setter>
        <Setter Property="Width" Value="0" />
        <Setter Property="Background" Value="{x:Null}"></Setter>

    </Style>

    <Style TargetType="DataGrid" >
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource Comon_ColumnHeaderStyle}"/>
        <Setter Property="AlternationCount" Value="2"/>
        <Setter Property="RowHeaderStyle" Value="{StaticResource Comon_RowHeaderStyle}"/>
        <Setter Property="RowStyle" Value="{StaticResource Comon_RowStyle}"></Setter>
        <Setter Property="Background" Value="#FF566675"/>
        <Setter Property="Foreground" Value="White"/>

        <Style.Triggers>
            <Trigger Property="Control.IsEnabled" Value="True">
                <Setter Property="Control.Opacity" Value="1"></Setter>
            </Trigger>
            <Trigger Property="Control.IsEnabled" Value="False">
                <Setter Property="Control.Opacity" Value="0.5"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>


    <!--DataGridStyle style: end-->

    <!--ListBoxStyle style: start-->
    <Style TargetType="ListBox">
        <Setter Property="Background" Value="#FF3F4D5D"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
    </Style>
    <!--ListBoxStyle style: end-->

    <!--MenuItemStyle style: start-->
    <Style TargetType="MenuItem" x:Key="Key_MenuItemStyle">
        <!--<Setter Property="Background" Value="White"></Setter>-->
        <!--<Setter Property="Padding" Value="0,0,0,0" />
        <Setter Property="MinHeight" Value="20"></Setter>-->

        <Setter Property="Foreground" Value="Black"></Setter>
        <Setter Property="Icon" Value="{StaticResource Key_ImageStyle}"></Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Icon" Value="{StaticResource KeyDisable_ImageStyle}"></Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Icon" Value="{StaticResource Key_ImageStyle}"></Setter>
            </Trigger>

        </Style.Triggers>
    </Style>

    <Style TargetType="MenuItem" x:Key="KeyDisable_MenuItemStyle">
        <!--<Setter Property="Background" Value="White"></Setter>-->
        <Setter Property="Foreground" Value="Black"></Setter>
        <Setter Property="Icon" Value="{StaticResource KeyOff_ImageStyle}"></Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Icon" Value="{StaticResource KeyOffDisable_ImageStyle}"></Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Icon" Value="{StaticResource KeyOff_ImageStyle}"></Setter>
            </Trigger>

        </Style.Triggers>
    </Style>

    <!--MenuItemStyle style: end-->

    <!--TextBlockStyle style: start-->
    <Style TargetType="TextBlock">
        <Setter Property="ToolTipService.ShowDuration" Value="30000"></Setter>

        <Style.Triggers>
            <Trigger Property="Control.IsEnabled" Value="True">
                <Setter Property="Control.Opacity" Value="1"></Setter>
            </Trigger>
            <Trigger Property="Control.IsEnabled" Value="False">
                <Setter Property="Control.Opacity" Value="0.5"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--TextBlockStyle style: end-->

    <!--TextBoxStyle style: start-->

    <Style TargetType="TextBox">
        <Setter Property="SnapsToDevicePixels"
          Value="True" />
        <Setter Property="OverridesDefaultStyle"
          Value="True" />
        <Setter Property="KeyboardNavigation.TabNavigation"
          Value="None" />
        <Setter Property="FocusVisualStyle"
          Value="{x:Null}" />
        <Setter Property="MinWidth"
          Value="10" />
        <Setter Property="Foreground" Value="Black"></Setter>
        <Setter Property="MinHeight"
          Value="10" />
        <Setter Property="AllowDrop"
          Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border Name="Border"
                CornerRadius="2"
                Padding="2"
                BorderThickness="2">
                        <Border.Background>
                            <SolidColorBrush Color="#FFBDC9D7" />
                        </Border.Background>
                        <Border.BorderBrush>
                            <SolidColorBrush Color="#FFFFA52C" />
                        </Border.BorderBrush>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DisabledControlLightColor}" />
                                        </ColorAnimationUsingKeyFrames>

                                    </Storyboard>

                                </VisualState>
                                <VisualState x:Name="ReadOnly">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DisabledControlDarkColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="MouseOver" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ScrollViewer Margin="0"
                        x:Name="PART_ContentHost" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Control.IsEnabled" Value="True">
                <Setter Property="Control.Opacity" Value="1"></Setter>
            </Trigger>
            <Trigger Property="Control.IsEnabled" Value="False">
                <Setter Property="Control.Opacity" Value="0.5"></Setter>
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style TargetType="RichTextBox">
        <Setter Property="SnapsToDevicePixels"
          Value="True" />
        <Setter Property="OverridesDefaultStyle"
          Value="True" />
        <Setter Property="KeyboardNavigation.TabNavigation"
          Value="None" />
        <Setter Property="FocusVisualStyle"
          Value="{x:Null}" />
        <Setter Property="MinWidth"
          Value="10" />
        <Setter Property="Foreground" Value="Black"></Setter>
        <Setter Property="MinHeight"
          Value="10" />
        <Setter Property="AllowDrop"
          Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border Name="Border"
                CornerRadius="2"
                Padding="2"
                BorderThickness="2">
                        <Border.Background>
                            <SolidColorBrush Color="#FFBDC9D7" />
                        </Border.Background>
                        <Border.BorderBrush>
                            <SolidColorBrush Color="#FFFFA52C" />
                        </Border.BorderBrush>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DisabledControlLightColor}" />
                                        </ColorAnimationUsingKeyFrames>

                                    </Storyboard>

                                </VisualState>
                                <VisualState x:Name="ReadOnly">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DisabledControlDarkColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="MouseOver" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ScrollViewer Margin="0"
                        x:Name="PART_ContentHost" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Control.IsEnabled" Value="True">
                <Setter Property="Control.Opacity" Value="1"></Setter>
            </Trigger>
            <Trigger Property="Control.IsEnabled" Value="False">
                <Setter Property="Control.Opacity" Value="0.5"></Setter>
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style TargetType="controls:MyDitgitTexBox">
        <Setter Property="SnapsToDevicePixels"
          Value="True" />
        <Setter Property="OverridesDefaultStyle"
          Value="True" />
        <Setter Property="KeyboardNavigation.TabNavigation"
          Value="None" />
        <Setter Property="FocusVisualStyle"
          Value="{x:Null}" />
        <Setter Property="MinWidth"
          Value="10" />
        <Setter Property="Foreground" Value="Black"></Setter>
        <Setter Property="MinHeight"
          Value="10" />
        <Setter Property="AllowDrop"
          Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border Name="Border"
                CornerRadius="2"
                Padding="1"
                BorderThickness="2">
                        <Border.Background>
                            <SolidColorBrush Color="#FFBDC9D7" />
                        </Border.Background>
                        <Border.BorderBrush>
                            <SolidColorBrush Color="#FFFFA52C" />
                        </Border.BorderBrush>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DisabledControlLightColor}" />
                                        </ColorAnimationUsingKeyFrames>

                                    </Storyboard>

                                </VisualState>
                                <VisualState x:Name="ReadOnly">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DisabledControlDarkColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="MouseOver" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ScrollViewer Margin="0"
                        x:Name="PART_ContentHost" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Control.IsEnabled" Value="True">
                <Setter Property="Control.Opacity" Value="1"></Setter>
            </Trigger>
            <Trigger Property="Control.IsEnabled" Value="False">
                <Setter Property="Control.Opacity" Value="0.5"></Setter>
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style TargetType="controls:MyMaskedTextBox">
        <Setter Property="SnapsToDevicePixels"
          Value="True" />
        <Setter Property="OverridesDefaultStyle"
          Value="True" />
        <Setter Property="KeyboardNavigation.TabNavigation"
          Value="None" />
        <Setter Property="FocusVisualStyle"
          Value="{x:Null}" />
        <Setter Property="MinWidth"
          Value="10" />
        <Setter Property="Foreground" Value="Black"></Setter>
        <Setter Property="MinHeight"
          Value="10" />
        <Setter Property="AllowDrop"
          Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border Name="Border"
                CornerRadius="2"
                Padding="2"
                BorderThickness="2">
                        <Border.Background>
                            <SolidColorBrush Color="#FFBDC9D7" />
                        </Border.Background>
                        <Border.BorderBrush>
                            <SolidColorBrush Color="#FFFFA52C" />
                        </Border.BorderBrush>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DisabledControlLightColor}" />
                                        </ColorAnimationUsingKeyFrames>

                                    </Storyboard>

                                </VisualState>
                                <VisualState x:Name="ReadOnly">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DisabledControlDarkColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="MouseOver" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ScrollViewer Margin="0"
                        x:Name="PART_ContentHost" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Control.IsEnabled" Value="True">
                <Setter Property="Control.Opacity" Value="1"></Setter>
            </Trigger>
            <Trigger Property="Control.IsEnabled" Value="False">
                <Setter Property="Control.Opacity" Value="0.5"></Setter>
            </Trigger>
        </Style.Triggers>

    </Style>


    <Style TargetType="controls:TextBoxFiltrName">
        <Setter Property="SnapsToDevicePixels"
          Value="True" />
        <Setter Property="OverridesDefaultStyle"
          Value="True" />
        <Setter Property="KeyboardNavigation.TabNavigation"
          Value="None" />
        <Setter Property="FocusVisualStyle"
          Value="{x:Null}" />
        <Setter Property="MinWidth"
          Value="10" />
        <Setter Property="Foreground" Value="Black"></Setter>
        <Setter Property="MinHeight"
          Value="10" />
        <Setter Property="AllowDrop"
          Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border Name="Border"
                CornerRadius="2"
                Padding="1"
                BorderThickness="2">
                        <Border.Background>
                            <SolidColorBrush Color="#FFBDC9D7" />
                        </Border.Background>
                        <Border.BorderBrush>
                            <SolidColorBrush Color="#FFFFA52C" />
                        </Border.BorderBrush>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DisabledControlLightColor}" />
                                        </ColorAnimationUsingKeyFrames>

                                    </Storyboard>

                                </VisualState>
                                <VisualState x:Name="ReadOnly">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DisabledControlDarkColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="MouseOver" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ScrollViewer Margin="0"
                        x:Name="PART_ContentHost" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Control.IsEnabled" Value="True">
                <Setter Property="Control.Opacity" Value="1"></Setter>
            </Trigger>
            <Trigger Property="Control.IsEnabled" Value="False">
                <Setter Property="Control.Opacity" Value="0.5"></Setter>
            </Trigger>
        </Style.Triggers>

    </Style>

</ResourceDictionary>